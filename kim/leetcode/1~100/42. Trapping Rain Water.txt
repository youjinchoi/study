https://leetcode.com/problems/trapping-rain-water/

public class Solution {
    public int Trap(int[] height) {
        
        int result = 0;
        int temp = 0;
        int left = 0;
        for(int j = 1; j < height.Length; j++)
        {
            if(height[left] <= height[j])
            {
                left = j;
                result += temp;
                temp = 0;
            }
            else
            {
                temp += height[left] - height[j];
            }
        }
        temp = 0;
        
        int right = height.Length - 1;
        for(int x = height.Length - 2; x >= left; x--)
        {
            if(height[right] <= height[x])
            {
                right = x;
                result += temp;
                temp = 0;
            }
            else
            {
                temp += height[right] - height[x];
            }
        }
        
        return result;
    }
}


// O(N)


// if I do find max then count 0 to max itteration
// O(m*N)
https://leetcode.com/problems/letter-combinations-of-a-phone-number/

public class Solution {
    public IList<string> LetterCombinations(string digits) {
        var result = new List<string>();
        if(digits == null || digits.Length == 0) return result;
        
        var numberLetterMap = new string[]{
            null,
            null,
            "abc",
            "def",
            "ghi",
            "jkl",
            "mno",
            "pqrs",
            "tuv",
            "wxyz"
        };
            
        getLetterCombinationRecursive(result, digits, "", 0, numberLetterMap);

        return result;
    }
    
    public void getLetterCombinationRecursive(List<string> result, string digits, string current, int index, string[] numberLetterMap){
        if(current.Length == digits.Length){
            result.Add(current);
            return;
        }
        
        var letters = numberLetterMap[int.Parse(digits[index].ToString())];
        for(int i = 0; i < letters.Length; i++){
            getLetterCombinationRecursive(result, digits, current + letters[i], index + 1, numberLetterMap);
        }
    }
}
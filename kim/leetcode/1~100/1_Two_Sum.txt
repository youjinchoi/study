https://leetcode.com/problems/two-sum/

public class Solution {
    public int[] TwoSum(int[] nums, int target) {
        if(nums == null || nums.Length < 2)
            return null;
        
        var dic = new Dictionary<int, int>();
        
        for(int i = 0; i < nums.Length; i++)
        {
            if(dic.ContainsKey(target - nums[i]))
                return new int[]{i, dic[target - nums[i]]};
            dic[nums[i]] = i;
        }
        return null;
    }
}

//public class Solution {
//    public int[] TwoSum(int[] nums, int target) {
//        if(nums == null || nums.Length < 2)
//            return null;
//        
//        for(int i = 0; i < nums.Length; i++)
//        {
//            for(int j = 0; j < nums.Length; j++)
//            {
//                if(i==j) continue;
//                if(nums[i] + nums[j] == target)
//                    return new int[]{i, j};
//            }
//        }
//        return null;
//    }
//}